import numpy as np
import pandas as pd
import jieba
# a1 = ['a', 'b', 'a', 'b', 'a']
# a2 = ['a', 'a', 'b', 'b', 'b']
# a3 = [1, 2, 3, 4, 5]
# a4 = [5, 6, 7, 8, 9]
# table = pd.DataFrame(data={'key1': a1, 'key2': a2, 'data1': a3, 'data2': a4})
# print(table)
# grouped = table['data1'].groupby(by=table['key1']).agg(['min', 'max', 'sum', 'mean', 'count'])
# print(grouped)


#词向量
# from sklearn.feature_extraction.text import CountVectorizer
# texts=["dog cat fish","dog cat cat","fish bird", 'bird']
# cv = CountVectorizer()
# cv_fit = cv.fit_transform(texts)
# print(cv.get_feature_names())
# print(cv_fit)

s = '3 月 18 日搜狗发布了智能录音笔 C1，采用了双麦阵列和降噪算法。C1 发布几个月之后，杨洪涛表示行业第一次用录音笔反馈的真实海量数据对录音笔用户和使用场景作出画像。\
fsafa afdsAI 创新联盟成之后，搜狗则又打通多个触及用户，搜集语音数据的入口。正如王小川所说，搜狗输入法的日语音请求峰值超过 7 亿次，准确度超过 98%。搜狗与更多硬件的连接将会帮助其 AI 技术的壁垒越垒越高。' \
    '日均被使用 6 亿次，准确率达 95% 的搜狗语音转写技术是听写服务的重点。其实时语音转写运用了搜狗自研的延迟可控的 Adaptive Attention-based 端到端建模技术，非实时语音转写功能使用业界领先的深层 Transformer-based 端到端语音识别技术。' \
    '核心能力之外，搜狗首创了智能编辑功能，比如文本顺滑过滤口头语和重复词，通过声音识别区别说话者等等；同时支持 10 种以上的语音识别，以及方言。' \
    '不过，搜狗的做法与市场上的技术输出公司不太一样，搜狗听写并不是提供 API 技术接口，而是提供由技术构成的完整服务。' \
    '在搜狗 AI 交互技术中心总经理王砚峰看来，搜狗做的是两件事儿，一是将中台服务做得更完善，除了转写技术，还有搜狗输入法的接入，将录音笔与 PC 端、移动端搜狗输入法相连就能实现输入法内转写；承载用户输入习惯的统一输入法账号；多端同步编辑和云存储服务。' \
    '二是为合作伙伴提供更方便地接入服务。不管在移动端、PC 端，搜狗 AI 都可以直接根据硬件的特性，与硬件自动完成适配。「我们在做一个类似 OS 的概念，当有了这个录音笔 OS，合作伙伴的录音笔可以在无成本的情况下使用搜狗 AI 的中台能力。」' \
    'AI成熟期的开端，基于场景化的技术开放能力' \
    '「搜狗不想再做一个语音识别 API，而是用搜狗的优势让合作伙伴有更大的用户价值，同时也有产业和商业价值的服务形式出现。」这是搜狗在做结合场景的技术开放的核心点。' \
    '比如利用输入法的词库更准确地转写，是搜狗结合场景做技术的体现之一。据王砚峰给出的数字，通过实测，加入了输入法个性词库以后在专业词上的错误率降低 40% 以上。' \
    '未来是场景化的 AI 赋能，杨洪涛在接受媒体采访时坚信地说道。' \
    '用录音笔获取信息或者提升文字生产效率，是问题的第一步。当深入思考用户需求，每个场景里 AI 还可以解决更多的问题。「我们期待场景能够扩大化。」但是杨洪涛坦然，搜狗的 AI 技术还有更多的场景化问题需要去解决。' \
    '杨洪涛表示，搜狗 AI 接下来会做利用 AI 技术给录音降噪，过滤吵杂和无关的声音。王砚峰补充道，搜狗 AI 还需要训练自纠错的能力，在搜狗 AI 做翻译的时候，会把语音识别的错误也带到翻译模型中建模，训练出结果是即便语音识别错误，只要语音是正确的，机器仍然能翻译出来正确的效果，「后面的系统如何能吃掉前面的错误，对我们来说是另一大挑战。」' \
    '从搜狗引以为傲的分身技术，到智能硬件落地，再到 AI 能力的开放，对于搜狗来说不仅像是上一阶段技术发展的小结。更像是告别搜索、浏览器、输入法「三级火箭」时代之后，迈向 AI 技术成熟期的开端。'

import jieba.analyse
print(jieba.analyse.extract_tags(sentence=s, topK=5, withWeight=False))